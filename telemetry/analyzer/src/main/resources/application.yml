spring:
  application:
    name: analyzer

  kafka:
    bootstrap-servers: localhost:9092
    consumer-poll-timeout: 1s
    consumers:
      hubs:
        properties:
          group.id: telemetry-analyzer-hubs
          client.id: telemetry.analyzer.hubs
          auto.offset.reset: earliest
          key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value.deserializer: ru.yandex.practicum.deserializer.HubEventDeserializer
        topics:
          - telemetry.hubs.v1

      snapshots:
        properties:
          group.id: telemetry-analyzer-snapshots
          client.id: telemetry.analyzer.snapshots
          auto.offset.reset: earliest
          key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value.deserializer: ru.yandex.practicum.deserializer.SensorsSnapshotDeserializer
        topics:
          - telemetry.snapshots.v1



  datasource:
    url: jdbc:postgresql://localhost:5432/telemetry_analyzer
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

  sql:
    init:
      mode: always

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect


grpc:
  client:
    router:
      address: static://localhost:59090
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext
